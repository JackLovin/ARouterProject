apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersions
    buildToolsVersion rootProject.ext.buildToolsVersions

    defaultConfig {
        applicationId "com.sunyard.arouterdemo"
        minSdkVersion rootProject.ext.minSdkVersions
        targetSdkVersion rootProject.ext.targetSdkVersions
        versionCode rootProject.ext.versionCodes
        versionName rootProject.ext.versionNames

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions{
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "androidx.appcompat:appcompat:$rootProject.ext.appcompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.ext.constraintlayoutVersion"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.espressoCoreVersion"
    api "com.alibaba:arouter-api:$rootProject.ext.arouterApiVersion"
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.arouterCompilerVersion"
    if (isModule.toBoolean()) {//组件模式下----只依赖CommonModule
        implementation project(path: ':CommonModule')
    } else {//集成模式下---依赖所有的业务Module
        implementation project(path: ':mylibrary')
    }

}